{
    "id": "base",
    "type": "application",
    "value": {
        "author": "Sander Mertens",
        "description": "Test project for flecs",
        "public": false,
        "coverage": false,
        "use": [
            "flecs"
        ]
    },
    "test": {
        "testsuites": [{
            "id": "Vector",
            "setup": true,
            "testcases": [
                "free_empty",
                "count",
                "count_empty",
                "get",
                "get_first",
                "get_last",
                "get_last_from_empty",
                "get_last_from_null",
                "get_empty",
                "get_out_of_bound",
                "add_empty",
                "add_resize",
                "sort_rnd",
                "sort_sorted",
                "sort_empty",
                "sort_null",
                "size_of_null",
                "set_size_smaller_than_count",
                "pop_elements",
                "pop_null",
                "reclaim",
                "grow",
                "copy",
                "copy_null",
                "memory",
                "memory_from_null",
                "addn_to_null",
                "addn_to_0_size",
                "addn_one",
                "set_min_count",
                "set_min_size",
                "set_min_size_to_smaller",
                "set_size_of_null",
                "new_from_array",
                "remove_first",
                "remove_second",
                "remove_last",
                "clear",
                "assert_size",
                "assert_wrong_size"
            ]
        }, {
            "id": "Map",
            "setup": true,
            "testcases": [
                "count",
                "count_empty",
                "set_overwrite",
                "set_rehash",
                "set_zero_buckets",
                "get",
                "get_all",
                "get_empty",
                "get_unknown",
                "get_from_null",
                "iter",
                "iter_empty",
                "iter_zero_buckets",
                "remove",
                "remove_empty",
                "remove_unknown",
                "grow",
                "set_size_0",
                "clear",
                "copy",
                "memory"
            ]
        }, {
            "id": "Sparse",
            "setup": true,
            "testcases": [
                "add_1",
                "add_1_to_empty",
                "add_1_chunk_size_1",
                "add_n",
                "add_n_chunk_size_1",
                "remove",
                "remove_first",
                "remove_last",
                "remove_all",
                "remove_all_n_chunks",
                "remove_deleted",
                "remove_future_version",
                "clear_1",
                "clear_empty",
                "clear_n",
                "clear_n_chunks",
                "add_after_clear",
                "memory_null",
                "copy",
                "restore",
                "create_delete",
                "create_delete_2",
                "count_of_null",
                "size_of_null",
                "copy_null",
                "set_id_source",
                "new_ids",
                "last_id",
                "exists",
                "get_any",
                "get_any_no_chunk",
                "recycle_last_unused",
                "get_or_create_after_max",
                "get_or_create_after_max_empty",
                "get_or_create_no_recycle",
                "get_lo_after_create_hi",
                "create_lo_after_create_hi"
            ]
        }, {
            "id": "Dense",
            "setup": true,
            "testcases": [
                "get_or_create",
                "get_or_create_exists",
                "get_not_exist",
                "get_0_size",
                "remove",
                "remove_not_exists"
            ]          
        }, {
            "id": "Ptree",
            "setup": true,
            "testcases": [
                "get_first_65k",
                "get_existing",
                "new_index_below_prev",
                "new_index_below_prev_page_size_limit",
                "new_index_above_prev",
                "new_index_above_prev_page_size_limit",
                "iter_tiny",
                "iter"
            ]
        }]
    }
}
